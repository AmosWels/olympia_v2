{"version":3,"file":"static/webpack/static/development/pages/index.js.42733216ada7ca6ff049.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { withFormik, FormikProps } from \"formik\";\n// import { Formik, Field, ErrorMessage, FormikProps } from \"formik\";\nimport * as Yup from \"yup\";\nimport Link from 'next/link';\nimport Layout from \"../components/Layout\";\nimport { Form, Button } from 'react-bootstrap';\nimport FormBox from \"../components/formBox\";\n\n// import logo from \"../static/ologo.jpeg\";\n\ninterface FormValues {\n    email: string;\n    password: string;\n}\n\ninterface OtherProps {\n    title?: string;\n}\n\ninterface MyFormProps {\n    initialEmail?: string;\n    initialPassword?: string;\n}\n\nconst InnerForm = (props: OtherProps & FormikProps<FormValues>) => {\n    const {\n        // values,\n        // // errors,\n        // // touched,\n        // handleChange,\n        // handleBlur,\n        handleSubmit,\n        // isSubmitting,\n        title\n    } = props;\n\n    return (\n        <Layout>\n            <FormBox>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email addresss</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            placeholder=\"Enter email\" \n                            // onChange={handleChange}\n                            // onBlur={handleBlur}\n                            // value={values.email}\n                             />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            placeholder=\"Enter Password\" \n                            // onChange={handleChange}\n                            // onBlur={handleBlur}\n                            // value={values.email}\n                             />\n                        <Form.Control \n                            type=\"password\" \n                            placeholder=\"Password\"\n                            // onChange={handleChange}\n                            // onBlur={handleBlur}\n                            // value={values.password} \n                            />\n                    </Form.Group>\n                    <Button \n                        variant=\"outline-secondary\" \n                        type=\"submit\"\n                    //     disabled={\n                    //     isSubmitting ||\n                    //     !!(errors.email && touched.email) ||\n                    //     !!(errors.password && touched.password)\n                    // }\n                    >\n                        Submit\n                    </Button><br/>\n                    <Link href=\"/register\">\n                        <a>Register</a>\n                    </Link>\n                </Form>\n            </FormBox>\n            <h1>{title}</h1>\n        </Layout>\n    );\n};\n\nconst App = withFormik<MyFormProps, FormValues>({\n    mapPropsToValues: props => ({\n        email: props.initialEmail || \"\",\n        password: props.initialPassword || \"\"\n    }),\n\n    validationSchema: Yup.object().shape({\n        email: Yup.string()\n            .email(\"Email not valid\")\n            .required(\"Email is required\"),\n        password: Yup.string().required(\"Password is required\")\n    }),\n\n    handleSubmit(\n        { email, password }: FormValues,\n        // { props, setSubmitting, setErrors }\n    ) {\n        console.log(email, password);\n    }\n})(InnerForm);\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AAGA;AAJA;AAOA;AAGA;AAAA;AAAA;AACA;AACA;AAlBA;AAqBA;;;;A","sourceRoot":""}