{"ast":null,"code":"var _jsxFileName = \"/Users/amoswelike/projects/olympia_v2/pages/register/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\"; // import Wrapper from \"../../styles/Wrapper\";\n// import InputWrapper from \"../../styles/InputWrapper\";\n// import Input from \"../../styles/Input\";\n// import Label from \"../../styles/Label\";\n\nimport Link from 'next/link';\nimport Layout from \"../../components/Layout\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport FormBox from \"../../components/formBox\";\n\nconst InnerForm = props => {\n  const {\n    // values,\n    // errors,\n    // touched,\n    // handleChange,\n    // handleBlur,\n    // handleSubmit,\n    // isSubmitting,\n    title\n  } = props;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(FormBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"First name\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name \",\n    defaultValue: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Surname\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name \",\n    defaultValue: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Email\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name \",\n    defaultValue: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Gender\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name \",\n    defaultValue: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name \",\n    defaultValue: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Confirm Password\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name \",\n    defaultValue: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Button, {\n    variant: \"outline-secondary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Submit form\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Back to Login\")))));\n};\n\nconst App = withFormik({\n  mapPropsToValues: props => ({\n    email: props.initialEmail || \"\",\n    password: props.initialPassword || \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Email not valid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  }),\n\n  handleSubmit({\n    email,\n    password\n  }) // { props, setSubmitting, setErrors }\n  {\n    console.log(email, password);\n  }\n\n})(InnerForm);\nexport default App;","map":{"version":3,"sources":["/Users/amoswelike/projects/olympia_v2/pages/register/index.tsx"],"names":["React","withFormik","Yup","Link","Layout","Form","Col","Button","FormBox","InnerForm","props","title","App","mapPropsToValues","email","initialEmail","password","initialPassword","validationSchema","object","shape","string","required","handleSubmit","console","log"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { withFormik, FormikProps} from \"formik\";\nimport * as Yup from \"yup\";\n\n// import Wrapper from \"../../styles/Wrapper\";\n// import InputWrapper from \"../../styles/InputWrapper\";\n// import Input from \"../../styles/Input\";\n// import Label from \"../../styles/Label\";\nimport Link from 'next/link';\nimport Layout from \"../../components/Layout\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport FormBox from \"../../components/formBox\";\n\ninterface FormValues {\n    email: string;\n    password: string;\n}\n\ninterface OtherProps {\n    title?: string;\n}\n\ninterface MyFormProps {\n    initialEmail?: string;\n    initialPassword?: string;\n}\n\nconst InnerForm = (props: OtherProps & FormikProps<FormValues>) => {\n    const {\n        // values,\n        // errors,\n        // touched,\n        // handleChange,\n        // handleBlur,\n        // handleSubmit,\n        // isSubmitting,\n        title\n    } = props;\n\n    return (\n        <Layout>\n            <FormBox>\n                <Form>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name \"\n                                defaultValue={title}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                            <Form.Label>Surname</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name \"\n                                defaultValue={title}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name \"\n                                defaultValue={title}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                            <Form.Label>Gender</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name \"\n                                defaultValue={title}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name \"\n                                defaultValue={title}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"First name \"\n                                defaultValue={title}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Button variant=\"outline-secondary\" type=\"submit\">Submit form</Button><br/>\n                    <Link href=\"/\">\n                        <a>Back to Login</a>\n                    </Link>\n                </Form>\n            </FormBox>\n            \n            {/* <h1>{title}</h1>\n            <form onSubmit={handleSubmit}>\n                <InputWrapper>\n                    <Label>Email</Label>\n                    <Input\n                        width={50}\n                        type=\"email\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n                    />\n                </InputWrapper>\n\n                <InputWrapper>\n                    <Label>Password</Label>\n                    <Input\n                        width={50}\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                    />\n                </InputWrapper>\n\n                <button\n                    type=\"submit\"\n                    disabled={\n                        isSubmitting ||\n                        !!(errors.email && touched.email) ||\n                        !!(errors.password && touched.password)\n                    }\n                >\n                    Sign In\n                </button>\n            </form> */}\n        </Layout>\n    );\n};\n\nconst App = withFormik<MyFormProps, FormValues>({\n    mapPropsToValues: props => ({\n        email: props.initialEmail || \"\",\n        password: props.initialPassword || \"\"\n    }),\n\n    validationSchema: Yup.object().shape({\n        email: Yup.string()\n            .email(\"Email not valid\")\n            .required(\"Email is required\"),\n        password: Yup.string().required(\"Password is required\")\n    }),\n\n    handleSubmit(\n        { email, password }: FormValues,\n        // { props, setSubmitting, setErrors }\n    ) {\n        console.log(email, password);\n    }\n})(InnerForm);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}